---
title: "Introduction to AI/ML/LLM for Humanities and Social Science"
author: 
    - "<b>Francesca Albrezzi</b><br/> falbrezzi@ucla.edu"
    - "<b>Ryan Horne</b><br/> rmhorne@ucla.edu"
format:
 revealjs:
  preview-links: true
  logo: images/CC_BY-SA_icon.svg
title-slide-attributes:
 data-background-color: "#005c96"
 data-background-size: 6%
 data-background-position: 100% 100%   
---

## Agenda


## Classification of AI Systems

::: {.columns}

::: {.column width="33%"}
**Artificial Narrow Intelligence**

- perform a narrow task with an assigned data set or  
- operate within certain specified parameters  
- Google Translate, Siri, and Alexa  
:::

::: {.column width="33%"}
**Artificial General Intelligence**

- expected to learn and reason with without human intervention  
- same cognativbe level as humans  
:::

::: {.column width="33%"}
**Artificial Super Intelligence**

- Far surpasses human abilities  
- singularity  
:::

:::


## Neural Network

A neural network is a computational model inspired by the human brain, designed to recognize patterns and relationships in data.

- Made up of layers of nodes (neurons).
- Each neuron processes inputs and passes the result to the next layer.
- Learns by adjusting weights through training
-  Used For
  - Image recognition, natural language processing, speech recognition, and more.

## Neural Net


```{python}
#| echo: false
import graphviz

def draw_neural_net():
    dot = graphviz.Digraph(format='png')
    dot.attr(rankdir='LR', size='10', ranksep='2.5')  # Increased spacing between layers

    input_nodes = [f'x{i+1}' for i in range(8)]
    hidden_nodes = [f'h{i+1}' for i in range(8)]
    output_nodes = [f'y{i+1}' for i in range(4)]

    with dot.subgraph(name='cluster_input') as c:
        for node in input_nodes:
            c.node(node, shape='circle', style='filled', fillcolor='lightblue')
        c.attr(label='Input Layer')

    with dot.subgraph(name='cluster_hidden') as c:
        for node in hidden_nodes:
            c.node(node, shape='circle', style='filled', fillcolor='lightgreen')
        c.attr(label='Hidden Layer')

    with dot.subgraph(name='cluster_output') as c:
        for node in output_nodes:
            c.node(node, shape='circle', style='filled', fillcolor='lightcoral')
        c.attr(label='Output Layer')

    for i in input_nodes:
        for h in hidden_nodes:
            dot.edge(i, h)

    for h in hidden_nodes:
        for o in output_nodes:
            dot.edge(h, o)

    return dot

draw_neural_net()

```

## Deep Neural Net

```{python}
#| echo: false
import graphviz

def draw_deep_neural_net():
    dot = graphviz.Digraph(format='png')
    
    # Set graph layout: left-to-right and increased spacing
    dot.attr(rankdir='LR', size='12', ranksep='1.5')  # More vertical spacing

    input_nodes = [f'x{i+1}' for i in range(8)]  # 8 Input neurons
    hidden_layer1 = [f'h1_{i+1}' for i in range(8)]  # First hidden layer (8 neurons)
    hidden_layer2 = [f'h2_{i+1}' for i in range(8)]  # Second hidden layer (8 neurons)
    hidden_layer3 = [f'h3_{i+1}' for i in range(8)]  # Third hidden layer (8 neurons)
    output_nodes = [f'y{i+1}' for i in range(4)]  # 4 Output neurons

    # Input Layer
    with dot.subgraph(name='cluster_input') as c:
        for node in input_nodes:
            c.node(node, shape='circle', style='filled', fillcolor='lightblue', width='0.8', height='0.8')
        c.attr(label='Input Layer')

    # Hidden Layer 1
    with dot.subgraph(name='cluster_hidden1') as c:
        for node in hidden_layer1:
            c.node(node, shape='circle', style='filled', fillcolor='lightgreen', width='0.8', height='0.8')
        c.attr(label='Hidden Layer 1')

    # Hidden Layer 2
    with dot.subgraph(name='cluster_hidden2') as c:
        for node in hidden_layer2:
            c.node(node, shape='circle', style='filled', fillcolor='lightyellow', width='0.8', height='0.8')
        c.attr(label='Hidden Layer 2')

    # Hidden Layer 3
    with dot.subgraph(name='cluster_hidden3') as c:
        for node in hidden_layer3:
            c.node(node, shape='circle', style='filled', fillcolor='lightpink', width='0.8', height='0.8')
        c.attr(label='Hidden Layer 3')

    # Output Layer
    with dot.subgraph(name='cluster_output') as c:
        for node in output_nodes:
            c.node(node, shape='circle', style='filled', fillcolor='lightcoral', width='0.8', height='0.8')
        c.attr(label='Output Layer')

    # Connections: Input -> Hidden Layer 1
    for i in input_nodes:
        for h1 in hidden_layer1:
            dot.edge(i, h1)

    # Connections: Hidden Layer 1 -> Hidden Layer 2
    for h1 in hidden_layer1:
        for h2 in hidden_layer2:
            dot.edge(h1, h2)

    # Connections: Hidden Layer 2 -> Hidden Layer 3
    for h2 in hidden_layer2:
        for h3 in hidden_layer3:
            dot.edge(h2, h3)

    # Connections: Hidden Layer 3 -> Output
    for h3 in hidden_layer3:
        for o in output_nodes:
            dot.edge(h3, o)

    return dot

draw_deep_neural_net()
```



## Definition and Basic Concepts
- Neural Networks, AI, and ML
- [Glossary](https://aiforhumanists.com/glossary/)

## Historical Development
- Key milestones
- Resources for further reading

## Importance & Applications
- Digital Humanities and North Campus disciplines
- Current research and use cases at UCLA


## Strengths and Limitations

## What AI is Good At
- Pattern recognition
- Language processing
- Image analysis

## What AI is NOT Good At
- In-depth analysis
- Contextual understanding
- Nuanced interpretation

## GoFAI vs. Generative AI


## Large Language Models (LLMs)

## Overview
- Key components (Transformers, Attention Mechanisms)
- Training processes and dataset types

## Popular LLMs
- GPT-3, BERT

## Applications in Digital Humanities
- Text analysis, translation, content generation
- Case Study: [Literary Event Detection](https://arxiv.org/abs/1912.01140)


## How LLMs Can Help

## Use Cases
- Brainstorming and outlining
- Prompt engineering for better AI responses

## Demos
- Outline an AI presentation
- AI-assisted code generation
- Pleiades to Neo4j workflows
- NLP Twitter / Bluesky data

## Issues
- Generated essays & ghost citations
- Ethical concerns


## Large Vision Models (LVMs) & Vision Language Models (VLMs)

## Overview
- Convolutional Neural Networks (CNNs)
- Generative Adversarial Networks (GANs)

## Popular Models
- DALL-E, CLIP

## Applications in Digital Humanities
- Image recognition & artwork restoration
- Example: [Leonardo Impett’s work](https://dahj.org/article/imgsai)

## How AI "Sees"
- Handwriting analysis
- Case Study: Alexander Hamilton & George Washington Papers ([HAT tool](https://www.csmc.uni-hamburg.de/publications/software/hat.html))



## Future of AI & ML in Digital Humanities

## Fine-Tuning AI for Humanities Research
- Domain expertise in model refinement
- Example: Human Pose Estimation (Bernasconi et al., 2023)

## Technical Barriers
- AI-assisted tools like Microsoft's Co-Pilot
- Accessibility and skill development


## Open vs. Closed AI

## Key Definitions
- Open AI (e.g., open-source models)
- Closed AI (e.g., proprietary systems)

## Implications
- Innovation, accessibility, and security concerns
- [Ollama: Local AI](https://ollama.com/)
- Retrieval-Augmented Generation (RAG)

## Ethical & Privacy Concerns
- AI decision-making in banking, housing, credit

---

## Ethical Concerns

## Trust & Authenticity
- AI’s role in misinformation/disinformation
- Deepfakes & synthetic media
- Detection & prevention strategies

## Bias & Fairness
- Algorithmic bias (Joy Buolamwini's research)
- Mitigation strategies & ethical data collection

## Academic Integrity
- AI-generated content accuracy
- Copyright & ownership debates



## Future Directions & Trends

## Emerging Technologies
- Advances in neural networks
- AI’s evolving role in Digital Humanities

## Ethical AI at UCLA
- [Chris Mattmann’s AI Resources](https://adminvc.ucla.edu/blog/artificial-intelligence-faqs)
- [Generative AI at UCLA](https://it.ucla.edu/news/new-resource-generative-ai-ucla)

## Further Learning
- Courses, articles, and bibliography


## Discussion & Questions

